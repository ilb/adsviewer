import prisma from '../../libs/prisma/prisma';
import DictionaryRepository from '../../src/repositories/DictionaryRepository';

const repository = new DictionaryRepository({ prisma });

it('should list car Manufacturer', async () => {
  const res = await repository.listCarsManufacturer();
  const carManufacturer = res.map((row) => row.name);
  const expected = [
    'Zuk',
    'BAW',
    'KIA',
    'Mitsubishi',
    'Caterham',
    'FIAT',
    'Руссо-Балт',
    'Aro',
    'DKW',
    'DW Hower',
    'Genesis',
    'Tatra',
    'Maserati',
    'Skoda',
    'Dadi',
    'ЗАЗ',
    'Hyundai',
    'Ronart',
    'Vortex',
    'Iveco',
    'Leyland',
    'Acura',
    'Москвич',
    'Oldsmobile',
    'Nysa',
    'Lotus',
    'ГАЗ',
    'AM General',
    'Zibar',
    'ЗиС',
    'Wanderer',
    'ЛуАЗ',
    'AMC',
    'Alfa Romeo',
    'ИЖ',
    'Saturn',
    'Dacia',
    'LDV',
    'Maybach',
    'Wiesmann',
    'Jeep',
    'Isuzu',
    'Renault Samsung',
    'Aston Martin',
    'Asia',
    'Hummer',
    'Luxgen',
    'SMA',
    'PUCH',
    'Iran Khodro',
    'Changan',
    'Morgan',
    'Triumph',
    'Renault',
    'Shuanghuan',
    'Honda',
    'СМЗ',
    'Geely',
    'Daihatsu',
    'Nissan',
    'AC',
    'Tesla',
    'Graham-Paige',
    'Opel',
    'Excalibur',
    'Bugatti',
    'Metrocab',
    'Lancia',
    'Hanomag',
    'FSO',
    'Haval',
    'Rolls-Royce',
    'Trabant',
    'Derways',
    'Hafei',
    'Scion',
    'Plymouth',
    'Mitsuoka',
    'Datsun',
    'Adler',
    'BYD',
    'Toyota',
    'Groz',
    'McLaren',
    'Hawtai',
    'ChangFeng',
    'Tianye',
    'Daewoo',
    'Eagle',
    'УАЗ',
    'Bentley',
    'Pontiac',
    'ВАЗ (LADA)',
    'ВИС',
    'Land Rover',
    'Daimler',
    'Buick',
    'Saleen',
    'ZOTYE',
    'Fisker',
    'Suzuki',
    'Комбат',
    'Mahindra',
    'Mercury',
    'Tianma',
    'Changhe',
    'Steyr',
    'DS',
    'Proton',
    'Doninvest',
    'Haima',
    'Great Wall',
    'Vauxhall',
    'Mercedes-Benz',
    'Lamborghini',
    'Ravon',
    'JAC',
    'BMW',
    'Willys',
    'Богдан',
    'Lexus',
    'Tata',
    'Talbot',
    'Huanghai',
    'Tazzari',
    'Dodge',
    'DeLorean',
    'Geo',
    'Citroen',
    'LTI',
    'ЗИЛ',
    'ZX',
    'Bio Auto',
    'РАФ',
    'MINI',
    'Mazda',
    'LIFAN',
    'Chery',
    'Volvo',
    'Smart',
    'FAW',
    'Alpina',
    'GMC',
    'Morris',
    'Porsche',
    'Dongfeng',
    'MG',
    'Jaguar',
    'GAC',
    'Landwind',
    'Subaru',
    'SEAT',
    'Bajaj',
    'JMC',
    'Канонир',
    'Ford',
    'Austin',
    'Ferrari',
    'Infiniti',
    'SsangYong',
    'Cadillac',
    'ЕрАЗ',
    'Chrysler',
    'Volkswagen',
    'Brilliance',
    'Foton',
    'Saab',
    'Автокам',
    'Studebaker',
    'Barkas',
    'Peugeot',
    'Hudson',
    'Audi',
    'Xin Kai',
    'Lichi',
    'Wartburg',
    'Chevrolet',
    'Rover',
    'Lincoln',
    'ТагАЗ',
    'Jinbei',
    'Апал',
    'Jonway',
    'Westfield',
    'Zastava'
  ];
  expect(carManufacturer).toStrictEqual(expected);
});

it('should list car Transmission', async () => {
  const res = await repository.carTransmission();
  const carTransmission = res.map((row) => row.name);
  const expected = ['механика', 'автомат', 'робот', 'вариатор'];
  expect(carTransmission).toStrictEqual(expected);
});

it('should list car Body', async () => {
  const res = await repository.carBody();
  const carBody = res.map((row) => row.name);
  const expected = [
    'хетчбэк',
    'минивэн',
    'внедорожник',
    'седан',
    'фургон',
    'пикап',
    'универсал',
    'купе',
    'микроавтобус',
    'кабриолет',
    'лимузин'
  ];
  expect(carBody).toStrictEqual(expected);
});

it('should list Region', async () => {
  const res = await repository.listRegion();
  const region = res.map((row) => row.name);
  const expected = [
    'Удмуртия',
    'Кировская область',
    'Пермский край',
    'Самарская область',
    'Саратовская область',
    'Свердловская область',
    'Татарстан',
    'Челябинская область',
    'Башкортостан',
    'Оренбургская область',
    'Нижегородская область',
    'Марий Эл',
    'Ульяновская область',
    'Ивановская область',
    'Чувашия',
    'Тюменская область',
    'Коми',
    'Краснодарский край',
    'Ханты-Мансийский АО',
    'Пензенская область',
    'Астраханская область',
    'Волгоградская область',
    'Ростовская область',
    'Липецкая область',
    'Тамбовская область',
    'Алтайский край',
    'Воронежская область',
    'Новосибирская область',
    'Смоленская область',
    'Курская область',
    'Омская область',
    'Брянская область',
    'Мурманская область',
    'Кемеровская область',
    'Тверская область',
    'Архангельская область',
    'Ярославская область',
    'Вологодская область',
    'Костромская область',
    'Рязанская область',
    'Калужская область',
    'Владимирская область',
    'Тульская область',
    'Иркутская область',
    'Адыгея',
    'Новгородская область',
    'Псковская область',
    'Орловская область',
    'Карелия',
    'Красноярский край',
    'Томская область',
    'Москва Г',
    'Московская область',
    'Амурская область',
    'Белгородская область',
    'Бурятия',
    'Дагестан',
    'Еврейская АО',
    'Забайкальский край',
    'Ингушетия',
    'Кабардино-Балкария',
    'Калининградская область',
    'Калмыкия',
    'Камчатский край',
    'Карачаево-Черкесия',
    'Крым',
    'Курганская область',
    'Ленинградская область',
    'Магаданская область',
    'Мордовия',
    'Ненецкий АО',
    'Приморский край',
    'Санкт-Петербург Г',
    'Саха (Якутия)',
    'Сахалинская область',
    'Севастополь Г',
    'Северная Осетия',
    'Ставропольский край',
    'Тыва',
    'Хабаровский край',
    'Хакасия',
    'Чеченская Республика',
    'Чукотский АО',
    'Ямало-Ненецкий АО',
    'Республика Алтай'
  ];
  expect(region).toStrictEqual(expected);
});
